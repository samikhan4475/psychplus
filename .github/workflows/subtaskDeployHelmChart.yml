name: Subtask Deploy Helm Chart

on:
  workflow_call:
    inputs:
      environment:
        description: Deployment Environment
        type: string
        default: development

      project:
        description: The project
        type: string
        required: true

      chart_path:
        description: Path to helm chart
        type: string
        default: './helm/ui-chart'

      helm_chart_version:
        description: Override version for the helm chart
        type: string
        required: true

      helm_app_version:
        description: Override appVersion for the helm chart
        type: string
        required: true

      image_tag:
        description: Tag of image to deploy
        type: string
        required: true

      env_namespace:
        description: K8s Deployment Namespace
        type: string
        required: true

      ingress_url:
        description: Ingress URL
        type: string
        required: true

      autoscaling_min_replicas:
        description: Minimum number of replicas if the helm chart has autoscaling enabled, otherwise ignored
        type: string
        default: '1'

      autoscaling_max_replicas:
        description: Maximum number of replicas if the helm chart has autoscaling enabled, otherwise ignored
        type: string
        default: '1'


jobs:
  deploy:
    permissions:
      actions: read
      contents: read
      id-token: write

    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}

    steps:
      - uses: actions/checkout@v4

      - uses: azure/use-kubelogin@v1
        with:
          kubelogin-version: 'v0.0.31'

      - uses: azure/login@v2
        name: Azure login
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          subscription-id: ${{ secrets.AKS_SUBSCRIPTION_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}

      - uses: Azure/aks-set-context@v4
        name: Get K8s context
        with:
          cluster-name: ${{ secrets.AKS_NAME }}
          resource-group: ${{ secrets.AKS_RESOURCE_GROUP }}
          admin: false
          use-kubelogin: true

      - name: Helm chart version
        if: ${{ inputs.helm_chart_version }} != ''
        shell: pwsh
        run: |
          $chart = Get-Content -Path '${{ inputs.chart_path }}/Chart.yaml'
          $chart = $chart -replace '^version: "?\d+\.\d+\.\d+"?$', 'version: ${{ inputs.helm_chart_version }}'
          $chart | Set-Content -Path '${{ inputs.chart_path }}/Chart.yaml'

      - name: Helm app version
        if: ${{ inputs.helm_app_version }} != ''
        shell: pwsh
        # The chart's appVersion does not allow '+', while SemVer does, so any unsupported '+' will be replaced with a supported '_'
        run: |
          $version = "${{ inputs.helm_app_version }}" -replace '\+', '_'
          $chart = Get-Content -Path '${{ inputs.chart_path }}/Chart.yaml'
          $chart = $chart -replace '^appVersion: "?\d+\.\d+\.\d+"?$', "appVersion: ""$version"""
          $chart | Set-Content -Path '${{ inputs.chart_path }}/Chart.yaml'

      - name: Helm chart merge values
        shell: pwsh
        run: |
          $valueContent = Get-Content -Path './helm/${{ inputs.project }}/values.yaml'
          $globalValueContent = Get-Content -Path './helm/global-env-values.yaml' -Raw
          $valueContent = $valueContent -replace '#global-values-replace-tag', "$globalValueContent"
          $valueContent | Set-Content -Path './helm/${{ inputs.project }}/values.yaml'

      - name: Helm chart output for log
        shell: pwsh
        run: |
          $chart = Get-Content -Path '${{ inputs.chart_path }}/Chart.yaml'
          echo "Contents of Chart.yaml"
          echo "======================"
          echo $chart

      - name: Install Helm
        uses: azure/setup-helm@v4

      - name: Deploy Helm chart
        run: |
          if [ "${{ inputs.environment }}" == "development" ]; then
            helm upgrade --install ui-${{ inputs.project }} ${{ inputs.chart_path }} --namespace ${{ inputs.env_namespace }} \
            --set image.repository=${{ secrets.ACR_NAME }}.azurecr.io/ui-${{ inputs.project }} \
            --set image.tag=${{ inputs.image_tag }} \
            --set ingress.hosts[0].host=${{ inputs.ingress_url }} \
            --set ingress.tls[0].hosts[0]=${{ inputs.ingress_url }} \
            --set ingress.tls[0].secretName=wildcard-ode-psychplus-tls \
            --set autoscaling.minReplicas=1 \
            --set autoscaling.maxReplicas=1 \
            --set environment=${{ inputs.environment }} \
            --values helm/${{ inputs.project }}/values.yaml
          else
            helm upgrade --install ui-${{ inputs.project }} ${{ inputs.chart_path }} --namespace ${{ inputs.env_namespace }} \
            --set image.repository=${{ secrets.ACR_NAME }}.azurecr.io/ui-${{ inputs.project }} \
            --set image.tag=${{ inputs.image_tag }} \
            --set ingress.hosts[0].host=${{ inputs.ingress_url }} \
            --set ingress.tls[0].hosts[0]=${{ inputs.ingress_url }} \
            --set ingress.tls[0].secretName=ui-${{ inputs.project }}-psychplus-tls \
            --set environment=${{ inputs.environment }} \
            --values helm/${{ inputs.project }}/values.yaml

          fi

      - name: Restart The Deployment
        if: ${{ github.event_name == 'pull_request' && github.event.action != 'opened' && inputs.environment == 'development' }}
        run: |
          kubectl rollout restart deployment/ui-${{ inputs.project }} -n ${{ inputs.env_namespace }}
