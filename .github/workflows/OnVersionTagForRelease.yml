name: Deploy Release To Production

on:
  push:
    tags:
      - 'v-[0-9]+.[0-9]+.[0-9]+'

jobs:
  build_variables:
    runs-on: ubuntu-latest
    environment: production
    outputs:
      image_tag: ${{ steps.build_variables.outputs.image_tag }}
      build_version: ${{ steps.build_variables.outputs.build_version }}
      build_full_version: ${{ steps.build_variables.outputs.build_full_version }}
    steps:
      - name: Extract Tag Name
        id: build_variables
        run: |
          tag_ref='${{ github.ref }}'
          tag_name=$(echo "$tag_ref" | sed 's|refs/tags/||')
          tag_name="${tag_name:2}"
          echo "Tag Name: $tag_name"
          build_ci_counter="$GITHUB_RUN_NUMBER"
          build_unique_id=$(date +%Y%m%d%H%M%S%N)
          build_version=$tag_name
          build_full_version="$build_version+$build_ci_counter.$build_unique_id"
          image_tag="v-$build_version"
          echo "image_tag=$image_tag" >> "$GITHUB_OUTPUT"
          echo "build_version=$build_version" >> "$GITHUB_OUTPUT"
          echo "build_full_version=$build_full_version" >> "$GITHUB_OUTPUT"

  create_draft_release:
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Create draft release
        uses: softprops/action-gh-release@v1
        with:
          draft: true
          generate_release_notes: true

  build_push_platform:
    needs: [build_variables]
    uses: ./.github/workflows/subtaskBuildPushImage.yml
    with:
      environment: production
      project: platform
      image_tag: ${{ needs.build_variables.outputs.image_tag }}
    secrets: inherit

  build_push_clinical:
    needs: [build_variables]
    uses: ./.github/workflows/subtaskBuildPushImage.yml
    with:
      environment: production
      project: clinical
      image_tag: ${{ needs.build_variables.outputs.image_tag }}
    secrets: inherit

  build_push_patient:
    needs: [build_variables]
    uses: ./.github/workflows/subtaskBuildPushImage.yml
    with:
      environment: production
      project: patient
      image_tag: ${{ needs.build_variables.outputs.image_tag }}
    secrets: inherit

  build_push_revcycle:
    needs: [build_variables]
    uses: ./.github/workflows/subtaskBuildPushImage.yml
    with:
      environment: production
      project: revcycle
      image_tag: ${{ needs.build_variables.outputs.image_tag }}
    secrets: inherit

  deploy_platform:
    needs: [build_variables, build_push_platform]
    uses: ./.github/workflows/subtaskDeployHelmChart.yml
    with:
      environment: production
      project: platform
      helm_chart_version: ${{ needs.build_variables.outputs.build_version }}
      helm_app_version: ${{ needs.build_variables.outputs.build_full_version }}
      image_tag: ${{ needs.build_variables.outputs.image_tag }}
      env_namespace: env-ehr
      ingress_url: ui.psychplus.io
    secrets: inherit

  deploy_clinical:
    needs: [build_variables, build_push_clinical]
    uses: ./.github/workflows/subtaskDeployHelmChart.yml
    with:
      environment: production
      project: clinical
      helm_chart_version: ${{ needs.build_variables.outputs.build_version }}
      helm_app_version: ${{ needs.build_variables.outputs.build_full_version }}
      image_tag: ${{ needs.build_variables.outputs.image_tag }}
      env_namespace: env-ehr
      ingress_url: ui.psychplus.io
    secrets: inherit

  deploy_patient:
    needs: [build_variables, build_push_patient]
    uses: ./.github/workflows/subtaskDeployHelmChart.yml
    with:
      environment: production
      project: patient
      helm_chart_version: ${{ needs.build_variables.outputs.build_version }}
      helm_app_version: ${{ needs.build_variables.outputs.build_full_version }}
      image_tag: ${{ needs.build_variables.outputs.image_tag }}
      env_namespace: env-ehr
      ingress_url: ui.psychplus.io
    secrets: inherit

  deploy_revcycle:
    needs: [build_variables, build_push_revcycle]
    uses: ./.github/workflows/subtaskDeployHelmChart.yml
    with:
      environment: production
      project: revcycle
      helm_chart_version: ${{ needs.build_variables.outputs.build_version }}
      helm_app_version: ${{ needs.build_variables.outputs.build_full_version }}
      image_tag: ${{ needs.build_variables.outputs.image_tag }}
      env_namespace: env-ehr
      ingress_url: ui.psychplus.io
    secrets: inherit

  remove_release_from_next:
    needs: [create_draft_release, deploy_platform, deploy_clinical, deploy_patient, deploy_revcycle]
    permissions:
      actions: read
      contents: read
      id-token: write
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - uses: azure/use-kubelogin@v1
        with:
          kubelogin-version: 'v0.0.31'

      - uses: azure/login@v2
        name: Azure login
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          subscription-id: ${{ secrets.AKS_SUBSCRIPTION_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}

      - uses: Azure/aks-set-context@v3
        name: Get K8s context
        with:
          cluster-name: ${{ secrets.AKS_NAME }}
          resource-group: ${{ secrets.AKS_RESOURCE_GROUP }}
          admin: false
          use-kubelogin: true

      - name: Install Helm
        uses: azure/setup-helm@v4

      - name: Clean up Next
        run: |
          helm uninstall ui-patient -n env-next
          helm uninstall ui-clinical -n env-next
          helm uninstall ui-platform -n env-next
          helm uninstall ui-revcycle -n env-next

  publish_draft_release:
    needs: [create_draft_release, deploy_platform, deploy_clinical, deploy_patient, deploy_revcycle, remove_release_from_next]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Get Draft Release ID
        id: get_release_id
        run: |
          release_id=$(curl -s -X GET -H "Authorization: token ${{ secrets.GH_TOKEN }}" "https://api.github.com/repos/${{ github.repository }}/releases?per_page=100" | jq -r '.[] | select(.draft == true).id')
          echo "Release ID: $release_id"
          echo "::set-output name=release_id::$release_id"

      - name: Publish Draft Release
        if: steps.get_release_id.outputs.release_id != 'null'
        run: |
          release_id="${{ steps.get_release_id.outputs.release_id }}"
          response=$(curl -s -X PATCH -H "Authorization: token ${{ secrets.GH_TOKEN }}" -d '{"draft": false}' "https://api.github.com/repos/${{ github.repository }}/releases/$release_id")
          if [ "$(echo "$response" | jq -r '.draft')" == "false" ]; then
            echo "Draft release published successfully."
          else
            echo "Failed to publish draft release."
            exit 1
          fi
