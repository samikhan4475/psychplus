import { z } from 'zod'

type MseWidgetSchemaType = z.infer<typeof mseWidgetSchema>

const mseWidgetSchema = z.object({
  orientation: z.array(z.string()),
  appearance: z.array(z.string()),
  behavior: z.array(z.string()),
  psychomotor: z.array(z.string()),
  speech: z.array(z.string()),
  mood: z.array(z.string()),
  affect: z.array(z.string()),
  thoughtProcess: z.array(z.string()),
  memoryHowTested: z.array(z.string()),
  memoryRemoteIntactOther: z.array(z.string()),
  thoughtContentOther: z.array(z.string()),
  insight: z.array(z.string()),
  insightHowTested: z.array(z.string()),
  judgment: z.array(z.string()),
  judgmentHowTested: z.array(z.string()),
  intelligence: z.array(z.string()),
  intelligenceHowTested: z.array(z.string()),
  schizophreniaDelusionValues: z.array(z.string()),
  schizophreniaHallucinationsValues: z.array(z.string()),
  siUnDisclosed: z.array(z.string()),
  hiUnDisclosed: z.array(z.string()),
  mmRecentIntactYesNo: z.enum(['yes', 'no']),
  mmRemoteIntactYesNo: z.enum(['yes', 'no']),
  tcsiYesNo: z.enum(['yes', 'no']),
  tchiYesNo: z.enum(['yes', 'no']),
  tcDelusionsYesNo: z.enum(['yes', 'no']),
  tcHallucinationsYesNo: z.enum(['yes', 'no']),
  tchiOtherDetails: z.string(),
  tcsiOtherDetails: z.string(),
  mmOtherDetails: z.string(),
  mhtOtherDetails: z.string(),
  intOtherDetails: z.string(),
  inthtOtherDetails: z.string(),
  insOtherDetails: z.string(),
  inshtOtherDetails: z.string(),
  jdgOtherDetails: z.string(),
  jdghtOtherDetails: z.string(),
  oriOtherDetails: z.string(),
  appOtherDetails: z.string(),
  behOtherDetails: z.string(),
  psyOtherDetails: z.string(),
  speOtherDetails: z.string(),
  modOtherDetails: z.string(),
  affOtherDetails: z.string(),
  thpOtherDetails: z.string(),
  tcOtherDetails: z.string(),
})

export { mseWidgetSchema, type MseWidgetSchemaType }
